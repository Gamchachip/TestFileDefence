using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.SocialPlatforms;


public class SelectFile : MonoBehaviour
{


    //????? ??????????????????
    //SelectFile - DrawDragBox - Selectmanager?? ????????? ???????¢®¡×?¢ç? ??????? ?? ?????¢®¡×?¢ç???? ????? ???????¢ç¢®¢¯? ?????¢®¡×?¢ç??¢ç¢®¡¿???????¢®¡×?¢ç? ??????? ???¢ç???????? ????????
    //??????? ?????? ???????? ???? ?? ?????? ????????? ?????¢ç?? ??? ???????? ?????

    bool isCtrl = false;

    int layerMask;
    Ray ray;

    Vector3 startPos;
    Vector3 endPos;
    float movedDistance;


    void Start()
    {
        layerMask = GameManager.instance.selectManager.fileForderLayer;
    }

    void Update()
    {
        /* ???????? ????????
       - ????????? ????? ??? (1.????????? 2. ?????????)
       ????????? ???????? selectedUnitList?? ???????¢®¡×?¢ç? ??????¢®¡×?¢ç?
       ????????? ??? selectedUnitList ??????

       - ??????¢ç¢®¢¯? ????? ??? (1.???? ?????)
       ???? ?????????? ?????????? ??????¢®¡×?¢ç?
       ????????? ??? ???? ????????????
        */
        #region ???????? ????????

        //???????????
        if (Input.GetMouseButtonDown(0) && !isCtrl)
        {
         

            ray = Camera.main.ScreenPointToRay(Input.mousePosition);
            Vector2 rayOrigin = new Vector2(ray.origin.x, ray.origin.y);


            RaycastHit2D hit = Physics2D.Raycast(rayOrigin, ray.direction, 100f, layerMask);

            
            
            
            if (hit)
            {
                startPos = Camera.main.ScreenToWorldPoint(Input.mousePosition);

                Debug.Log("?????? ???¢®¡×?¢ç??? ????????? ?????¢ç¢®¢¯?????????¢®¡×?¢ç? ????????????");
                GameManager.instance.selectManager.isSelecting = true;

                SelectedMark SU = hit.transform.gameObject.GetComponent<SelectedMark>();



                if (!GameManager.instance.selectManager.selectedUnitList.Contains(SU))
                {
                    GameManager.instance.selectManager.selectedUnitList.Add(SU);
                    SU.SelectMe();
                }

                Debug.Log(GameManager.instance.selectManager.selectedUnitList.Count);

            }
            else
            {
                GameManager.instance.selectManager.isSelecting = false;
                Debug.Log("?????? ???¢®¡×?¢ç??? ????????? ?????¢ç¢®¢¯?????????¢®¡×?¢ç? ???????????.");
                Debug.Log(GameManager.instance.selectManager.selectedUnitList.Count);
                
                if (GameManager.instance.selectManager.selectedUnitList.Count > 0)
                {
                    Debug.Log("?????????? ???¢®¡×?¢ç????? ??????????????? ??????? ???????????.");

                    for (int i = 0; i < GameManager.instance.selectManager.selectedUnitList.Count; i++)
                    {
                        Debug.Log(GameManager.instance.selectManager.selectedUnitList[i] + "?? ??????????????? ?????????????.");
                        GameManager.instance.selectManager.selectedUnitList[i].DeSelectMe();
                    }

                    GameManager.instance.selectManager.selectedUnitList.Clear();
                }

                Debug.Log(GameManager.instance.selectManager.selectedUnitList.Count);
            }
        }



        

        //ctrl ???¢®¡×?¢ç????¢ç¢®¢¯??
        if (Input.GetKeyDown(KeyCode.LeftControl))
        {
            isCtrl = true;
        }

        if (Input.GetKeyUp(KeyCode.LeftControl))
        {
            isCtrl = false;
        }




        //??????? + ctrl
        if (Input.GetMouseButtonDown(0) && isCtrl)
        {
            ray = Camera.main.ScreenPointToRay(Input.mousePosition);
            Vector2 rayOrigin = new Vector2(ray.origin.x, ray.origin.y);

            RaycastHit2D hit = Physics2D.Raycast(rayOrigin, ray.direction, 100f, layerMask);
            
            
            
            
            if (hit)
            {
                SelectedMark SU = hit.transform.gameObject.GetComponent<SelectedMark>();

                if (GameManager.instance.selectManager.selectedUnitList.Contains(SU))
                {
                    SU.DeSelectMe();
                    GameManager.instance.selectManager.selectedUnitList.Remove(SU);
                }
                else
                {
                    GameManager.instance.selectManager.selectedUnitList.Add(SU);
                    SU.SelectMe();
                }



                Debug.Log(GameManager.instance.selectManager.selectedUnitList.Count);
            }

        }
        #endregion



        /*?????¢®¡×?¢ç??¢ç¢®¡¿?? ??????? ?????? ??????????¢ç¢®¢¯? ?????? ?????????????????
         * 1. ??????????¢ç¢®¢¯? ?????? ?????? ????? ??? 
         * 2. ???????? ?????????????? ????????????
         * -> ????????? ?????¢ç?? ???? ?????¢ç????
         * 3. ?????? ?????????? ?????? ???? (???????? ?????)
         * 
         */
        #region ??????????¢ç¢®¢¯? ???? ????
        if (Input.GetMouseButton(0))    //????¢ç¢®¢¯??????? ???? ??? ???¢®¡×?¢ç???¢ç¢®¢¯???? ??????? ???¢®¡×?¢ç????¢®¡×?¢ç?¢ç¢®¡¿?
        {
            
        }



        //???????? ?? ??? ?????????? ????? ?????? ????
        if (!GameManager.instance.selectManager.isdrag)
        {

            if (Input.GetMouseButtonUp(0))
            {
                endPos = Camera.main.ScreenToWorldPoint(Input.mousePosition);

                if (GameManager.instance.selectManager.isSelecting)
                {


                    //0.5????????¢ç????¢ç¢®¢¯? ????
                    float movedDistanceX = Mathf.Round((endPos.x - startPos.x)* 2f) / 2f;
                    float movedDistanceY = Mathf.Round((endPos.y - startPos.y)* 2f) / 2f;


                    Vector3 moveVector = new Vector3(movedDistanceX, movedDistanceY, 0);

                    foreach (var item in GameManager.instance.selectManager.selectedUnitList)
                    {
                        item.transform.position += moveVector;
                    }
                }
                else
                {
                    foreach (SelectedMark item in GameManager.instance.selectManager.selectedUnitList)
                    {
                        item.DeSelectMe();
                    }

                    GameManager.instance.selectManager.selectedUnitList.Clear();
                }

            }


        }
        #endregion
    }
}
